# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
   variables:
  - name: SonarQube_ExtraProperties
    value: |
      sonar.branch.name=$(Build.SourceBranchName)
- task: SonarQubePrepare@5
      displayName: SonarQube Prepare
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'MSBuild'
        projectVersion: '$(Build.BuildNumber)'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(System.DefaultWorkingDirectory)/**/coverage.opencover.xml
          sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
          sonar.exclusions=**/CriiptoSignatures/**/*.*,**/Migrations/**/*.*
          sonar.test.exclusions=**/AldSigning.Tests/**/*.*
          sonar.cpd.exclusions=**/CriiptoSignatures/**/*.*,**/Migrations/**/*.*
          #sonar.coverage.exclusions=**/CriiptoSignatures/**/*.*,**/Migrations/**/*.*,**/ClientApp/**/*.*,**/AldUpload/**/*.*
          sonar.verbose = true
          $(SonarQube_ExtraProperties)    
- task: SonarQubeAnalyze@5
      displayName: SonarQube Analyze
- task: SonarQubePublish@5
      displayName: SonarQube Publish
      inputs:
        pollingTimeoutSec: '300'